# Generated by Django 5.2.4 on 2025-08-23 10:16

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("geo", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalTerritory",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("code", models.CharField(db_index=True, max_length=40)),
                ("name", models.CharField(max_length=120)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("STATE", "STATE"),
                            ("CITY", "CITY"),
                            ("PINCODE", "PINCODE"),
                        ],
                        max_length=10,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("effective_from", models.DateField(blank=True, null=True)),
                ("effective_till", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical territory",
                "verbose_name_plural": "historical territories",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Territory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=40, unique=True)),
                ("name", models.CharField(max_length=120)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("STATE", "STATE"),
                            ("CITY", "CITY"),
                            ("PINCODE", "PINCODE"),
                        ],
                        max_length=10,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("effective_from", models.DateField(blank=True, null=True)),
                ("effective_till", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="geo_territory_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="geo_territory_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "territories",
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="TerritoryMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="geo.city",
                    ),
                ),
                (
                    "pincode",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="geo.pincode",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="geo.state",
                    ),
                ),
                (
                    "territory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="geo.territory",
                    ),
                ),
            ],
            options={
                "verbose_name": "territory member",
                "verbose_name_plural": "territory members",
            },
        ),
        migrations.AddIndex(
            model_name="territory",
            index=models.Index(
                fields=["type", "is_active"], name="geo_territo_type_61ac4b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="territory",
            index=models.Index(
                fields=["effective_from", "effective_till"],
                name="geo_territo_effecti_e8a296_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="territorymember",
            index=models.Index(
                fields=["territory"], name="geo_territo_territo_f9c5f8_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="territorymember",
            constraint=models.UniqueConstraint(
                fields=("territory", "state"), name="uniq_state_member_per_territory"
            ),
        ),
        migrations.AddConstraint(
            model_name="territorymember",
            constraint=models.UniqueConstraint(
                fields=("territory", "city"), name="uniq_city_member_per_territory"
            ),
        ),
        migrations.AddConstraint(
            model_name="territorymember",
            constraint=models.UniqueConstraint(
                fields=("territory", "pincode"),
                name="uniq_pincode_member_per_territory",
            ),
        ),
    ]
